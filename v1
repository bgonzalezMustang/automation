
# Import pdfreader for reading
import pdfreader
from pdfreader import SimplePDFViewer

# Import re for regex manipulation
import re


# These are test files. Comment or uncomment the one you want to use.
# file = "3866-A-R-0BRK- MILESTONE- 108 HEDGE GREEN HOLLOW-LANDSCAPE.pdf"
file = "5161-COLINAS II-D-4BRK-DREES-517 FRANCIS COURT.pdf"
# file = "108 HEDGE GREEN HOLLOW MARKED PLANS.pdf"

# Make sure this path goes to where your relevant files are
path = "C:/Users/dwanegar/Documents/Python Scripts/testFiles/" + file


# Setup
pdfFileObj = open(path, 'rb')
viewer = SimplePDFViewer(pdfFileObj)

# The mandatory room types require minimum one of each type, but any one of a given type will do
kitchen = ["KITCHEN"]
bath = ["BATH", "POWDER", "UTILITY"]
mandatoryRoomTypes = [kitchen, bath]

# Convert mandatoryRoomTypes to a regex list
mandatoryRoomRegexes = []
# Add list of rooms successfully verified in tables
roomVerification = []
for roomType in mandatoryRoomTypes:
    # This looks like r"(?=(ROOM1|ROOM2|ROOM3))"
    roomTypeRegex = r"(?=("+'|'.join(roomType)+r"))"
    mandatoryRoomRegexes.append(roomTypeRegex)
    roomVerification.append(False)

# Starts in a "pass" state. Failing at any point changes this to failTest = True
failTest = False

# Whenever any event would cause failTest = True, a relevant string is added to the failLog
failLog = []

# canvases are pages in a pdf, I think? Regardless, iterate over these
for canvas in viewer:
    # Get the list of strings in the canvas. These are ordered by the method the pdf was written, not how it is viewed.
    page_strings = canvas.strings
    # This print line is not necessary to run. It is here for debugging.
    print(page_strings)
    for i in range(len(mandatoryRoomRegexes)):
        roomTypeRegex = mandatoryRoomRegexes[i]
        r = re.compile(roomTypeRegex)
        # Print is for debugging purposes
        print(roomTypeRegex)
        if len(page_strings)>1:
            for j in range(len(page_strings)-1):
                if (r.search(page_strings[j]) and page_strings[j+1] == "FIXTURE"):
                    # Print is for debugging purposes
                    print(page_strings[j])
                    roomVerification[i] = True
    # This would print out a list of all the tables name, but the logic needs to be worked on
    # if len(page_strings)>1:
    #     for j in range(len(page_strings)-1):
    #         if(page_strings[j+1] == "FIXTURE"):
    #             print(page_strings[j])

# If any room hasn't been verified, fail the test. Append the failLog for each.
for i in range(len(roomVerification)):
    if not roomVerification[i]:
        failTest = True
        failLog.append(mandatoryRoomRegexes[i])

# Finish the program based on test results.
if failTest:
    # add code to print failLog lines to a file
    print("Test failed, see log")
    print("fail log:")
    print(failLog)
else:
    print("Good job")
